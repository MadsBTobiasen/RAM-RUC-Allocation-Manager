// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RAM___RUC_Allocation_Manager.Models;

namespace RAM___RUC_Allocation_Manager.Migrations
{
    [DbContext(typeof(RamDbContext))]
    [Migration("20220515194416_RAM___RUC_Allocation_Manager")]
    partial class RAM___RUC_Allocation_Manager
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeCustomCommittee", b =>
                {
                    b.Property<int>("CustomCommitteeId")
                        .HasColumnType("int");

                    b.Property<int>("EmpployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("CustomCommitteeId", "EmpployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCustomCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeGroup", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("RoleOfEmployee")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("EmployeeGroup");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeHiringCommittee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("HiringCommitteeId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "HiringCommitteeId");

                    b.HasIndex("HiringCommitteeId");

                    b.ToTable("EmployeeHiringCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeProgramme", b =>
                {
                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ProgrammeId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeProgrammes");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.LeaderProgramme", b =>
                {
                    b.Property<int>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaderId")
                        .HasColumnType("int");

                    b.HasKey("ProgrammeId", "LeaderId");

                    b.HasIndex("LeaderId");

                    b.ToTable("LeaderProgrammes");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.PhdTasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleOfEmployee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Phds");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsMasterThesis")
                        .HasColumnType("bit");

                    b.Property<int>("MemberAmount")
                        .HasColumnType("int");

                    b.Property<int>("RucId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Programme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.ToTable("Programmes");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Redemption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RedeemedMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Redemptions");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgrammeId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("ProgrammeId");

                    b.ToTable("User");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.AssistantProfessorSupervision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupervisorId");

                    b.ToTable("AssistantProfessorSupervisions");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.CustomCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MinuteWorth")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.HiringCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PeopleToBeAssessed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("HiringCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.PhdCommittee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PhdCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.PromotionCommitteeTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleToBeAssessed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PromotionCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LectureAmount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.EmployeeCourse", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("RelativeLectureAmount")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeCourses");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.GroupFacilitationTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DaysSpan")
                        .HasColumnType("int");

                    b.Property<int?>("FacilitatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FacilitatorId");

                    b.ToTable("GroupFacilitationTasks");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Portfolio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExaminatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExaminatorId");

                    b.ToTable("Portfolios");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Synopsis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExaminatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExaminatorId");

                    b.ToTable("Synopses");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Employee", b =>
                {
                    b.HasBaseType("RAM___RUC_Allocation_Manager.Models.User");

                    b.Property<int>("Balance")
                        .HasColumnType("int");

                    b.Property<bool>("IsGroupLeader")
                        .HasColumnType("bit");

                    b.Property<int>("Savings")
                        .HasColumnType("int");

                    b.Property<int>("Title")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Leader", b =>
                {
                    b.HasBaseType("RAM___RUC_Allocation_Manager.Models.User");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Leader");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeCustomCommittee", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.CustomCommittee", "CustomCommittee")
                        .WithMany("EmployeesCustomCommittees")
                        .HasForeignKey("CustomCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("EmployeeCustomCommittees")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("CustomCommittee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeGroup", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("EmployeeGroups")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Group", "Group")
                        .WithMany("EmployeeGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeHiringCommittee", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("EmployeeHiringCommittees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.HiringCommittee", "HiringCommittee")
                        .WithMany("EmployeeHiringCommittees")
                        .HasForeignKey("HiringCommitteeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("HiringCommittee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.EmployeeProgramme", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("EmployeeProgrammes")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Programme", "Programme")
                        .WithMany("EmployeeProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.LeaderProgramme", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Leader", "Leader")
                        .WithMany("LeaderProgrammes")
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Programme", "Programme")
                        .WithMany("LeaderProgrammes")
                        .HasForeignKey("ProgrammeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Programme");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.DbConnections.PhdTasks", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("PhdsTasks")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Programme", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Leader", null)
                        .WithMany("Programmes")
                        .HasForeignKey("LeaderId");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Redemption", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("Redemptions")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.User", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Leader", null)
                        .WithMany("ProgrammeUsers")
                        .HasForeignKey("LeaderId");

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Programme", null)
                        .WithMany("Users")
                        .HasForeignKey("ProgrammeId");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.AssistantProfessorSupervision", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Supervisor")
                        .WithMany("AssistantProfessorSupervisions")
                        .HasForeignKey("SupervisorId");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.PhdCommittee", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("PhdCommittees")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.PromotionCommitteeTask", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", null)
                        .WithMany("PromotionCommittees")
                        .HasForeignKey("EmployeeId");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Course", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "ResponsibleEmployee")
                        .WithMany("CoordinatorOfCourses")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("ResponsibleEmployee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.EmployeeCourse", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Employee")
                        .WithMany("EmployeeCourses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.GroupFacilitationTask", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Facilitator")
                        .WithMany("GroupFacilitationTasks")
                        .HasForeignKey("FacilitatorId");

                    b.Navigation("Facilitator");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Portfolio", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Examinator")
                        .WithMany("Portfolios")
                        .HasForeignKey("ExaminatorId");

                    b.Navigation("Examinator");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Synopsis", b =>
                {
                    b.HasOne("RAM___RUC_Allocation_Manager.Models.Employee", "Examinator")
                        .WithMany("Synopses")
                        .HasForeignKey("ExaminatorId");

                    b.Navigation("Examinator");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Group", b =>
                {
                    b.Navigation("EmployeeGroups");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Programme", b =>
                {
                    b.Navigation("EmployeeProgrammes");

                    b.Navigation("LeaderProgrammes");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.CustomCommittee", b =>
                {
                    b.Navigation("EmployeesCustomCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.WorkAssigments.Committee.HiringCommittee", b =>
                {
                    b.Navigation("EmployeeHiringCommittees");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Employee", b =>
                {
                    b.Navigation("AssistantProfessorSupervisions");

                    b.Navigation("CoordinatorOfCourses");

                    b.Navigation("EmployeeCourses");

                    b.Navigation("EmployeeCustomCommittees");

                    b.Navigation("EmployeeGroups");

                    b.Navigation("EmployeeHiringCommittees");

                    b.Navigation("EmployeeProgrammes");

                    b.Navigation("GroupFacilitationTasks");

                    b.Navigation("PhdCommittees");

                    b.Navigation("PhdsTasks");

                    b.Navigation("Portfolios");

                    b.Navigation("PromotionCommittees");

                    b.Navigation("Redemptions");

                    b.Navigation("Synopses");
                });

            modelBuilder.Entity("RAM___RUC_Allocation_Manager.Models.Leader", b =>
                {
                    b.Navigation("LeaderProgrammes");

                    b.Navigation("Programmes");

                    b.Navigation("ProgrammeUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
